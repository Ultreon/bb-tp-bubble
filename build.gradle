import org.jetbrains.gradle.ext.Application

import java.nio.file.Files
import java.nio.file.StandardOpenOption

plugins {
    id 'java'
    id 'java-library'
    id "org.jetbrains.gradle.plugin.idea-ext" version "1.1.7"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
    google()
    maven {
        name "Atlassian"
        url "https://maven.atlassian.com/3rdparty/"
    }
    maven {
        name "ImageJ"
        url "https://maven.imagej.net/content/repositories/public/"
    }
    maven {
        name "JitPack"
        url "https://jitpack.io"
    }
    maven {
        name "Maven Central"
        url "https://repo1.maven.org/maven2/"
    }
    maven { url "https://github.com/Ultreon/ultreon-data/raw/main/.mvnrepo/" }
    maven { url "https://github.com/Ultreon/corelibs/raw/main/.mvnrepo/" }
    maven {
        name "Bubble Blaster Maven"
        url "https://github.com/Ultreon/bubble-blaster/raw/main/.mavenrepo/"
    }
    maven {
        name "Fabric Maven"
        url "https://maven.fabricmc.net/"
    }
}

configurations {

}

dependencies {
    api "com.github.Ultreon.bubble-blaster-2:desktop:libgdx-SNAPSHOT", {
        exclude module: "log4j-slf4j-impl"
    }
    api "com.github.Ultreon.bubble-blaster-2:desktop-merge:libgdx-SNAPSHOT", {
        exclude module: "log4j-slf4j-impl"
    }
    api "com.github.Ultreon.bubble-blaster-2:core:libgdx-SNAPSHOT", {
        exclude module: "log4j-slf4j-impl"
    }
    api "com.github.Ultreon.bubble-blaster-2:gameprovider:libgdx-SNAPSHOT", {
        exclude module: "log4j-slf4j-impl"
    }

    implementation "net.fabricmc:fabric-loader:0.14.22"

    implementation "org.apache.logging.log4j:log4j-slf4j2-impl:2.20.0"

    implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:1.12.0"
    implementation "com.badlogicgames.gdx:gdx-platform:1.12.0:natives-desktop"
    implementation "com.badlogicgames.gdx:gdx-box2d-platform:1.12.0:natives-desktop"
    implementation "com.badlogicgames.gdx:gdx-bullet-platform:1.12.0:natives-desktop"
    implementation "com.badlogicgames.gdx:gdx-freetype-platform:1.12.0:natives-desktop"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

compileJava {
    doFirst {
        mkdir "${projectDir}/run/"
    }
}

test {
    useJUnitPlatform()
}

mkdir("$buildDir/bubbles")

def ps = System.getProperty("path.separator")
def files = configurations.runtimeClasspath
def strm = (files.toList()).stream()
def rcl = String.join(ps, strm.map {
    it.path
}.filter{it != null }.toList())
//\tfabric.remapClasspathFile=$buildDir/bubbles/classpath.txt
//\tfabric.classPathGroups=$buildDir/classes/java/main/$ps$buildDir/resources/main/$ps${project(":core").buildDir}/classes/java/main/$ps${project(":core").buildDir}/resources/main/$ps${project(":desktop").buildDir}/classes/java/main/$ps${project(":desktop").buildDir}/resources/main/$ps${project(":gameprovider").buildDir}/classes/java/main/$ps${project(":gameprovider").buildDir}/resources/main/$ps$rcl
def conf = """
commonProperties
\tfabric.development=true
\tlog4j2.formatMsgNoLookups=true
\tfabric.log.disableAnsi=false
\tlog4j.configurationFile=$rootProject.projectDir/log4j.xml
"""

def launchFile = file("$buildDir/bubbles/launch.cfg")
Files.writeString(launchFile.toPath(), conf, StandardOpenOption.CREATE, StandardOpenOption.TRUNCATE_EXISTING, StandardOpenOption.WRITE)

def cp = "$rcl"

def cpFile = file("$buildDir.absolutePath/bubbles/classpath.txt")
Files.writeString(cpFile.toPath(), cp, StandardOpenOption.CREATE, StandardOpenOption.TRUNCATE_EXISTING, StandardOpenOption.WRITE)

idea{
    project{
        settings {
            withIDEADir { File dir ->
                println("Callback 1 executed with: " + dir.absolutePath)
            }

            runConfigurations {
                "Bubble Blaster"(Application) {                       // Create new run configuration "MyApp" that will run class foo.App
                    jvmArgs = "-Xmx2g -Dfabric.dli.config=$launchFile.path -Dfabric.dli.env=CLIENT -Dfabric.dli.main=net.fabricmc.loader.impl.launch.knot.KnotClient"
                    mainClass = 'net.fabricmc.devlaunchinjector.Main'
                    moduleName = idea.module.name + ".desktop.main"
                    workingDirectory = "$projectDir/run/"
                    programParameters = "--gameDir=."
                }
            }
        }
    }
}
